# AUTOGENERATED! DO NOT EDIT! File to edit: NER_POS_tagging.ipynb.

# %% auto 0
__all__ = ['model_checkpoint', 'token_classifier', 'title', 'description', 'article', 'predict']

# %% NER_POS_tagging.ipynb 43
# Import necessary libraries
import gradio as gr
from transformers import pipeline

# Load the fine-tuned BERT model for token classification
model_checkpoint = "Tarun-1999M/bert-finetuned-ner"
token_classifier = pipeline(
    "token-classification", model=model_checkpoint, aggregation_strategy="simple"
)

# Set up the Gradio interface
title = "Token Classification with Fine-tuned DISTILBERT"
description = """
This application identifies and classifies tokens (e.g., named entities) in a given text using a DISTILBERT model fine-tuned for NER. 
Input any text to see how the model labels the tokens.

### Explanation of Abbreviations:
- **O**: Outside of a named entity
- **ADJP**: Adjective Phrase
- **ADVP**: Adverb Phrase
- **CONJP**: Conjunction Phrase
- **INTJ**: Interjection
- **LST**: List Item Marker
- **NP**: Noun Phrase
- **PP**: Prepositional Phrase
- **PRT**: Particle
- **SBAR**: Subordinating Conjunction Clause
- **UCP**: Unlike Coordinated Phrase
- **VP**: Verb Phrase

"""

article = "This demo uses a DISTILBERT model fine-tuned on a specific task for token classification."

# Define the prediction function
def predict(text):
    results = token_classifier(text)
    return results

# Gradio interface
gr.Interface(
    fn=predict,
    inputs="textbox",
    outputs="json",
    title=title,
    description=description,
    article=article,
    examples=[
        ["My name is Sylvain and I work at Hugging Face in Brooklyn."],
        ["Albert Einstein was a physicist and he developed the theory of relativity."],
        ["Python is a programming language that I use daily."]
    ],
).launch()

